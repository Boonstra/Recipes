o: ActiveSupport::Cache::Entry	:@compressedF:@expires_in0:@created_atf1326884253.0085142:@value{	I"length:EFi^6I"digest;
F"%f6d58f5faf2c1df4599b45d8c3e399e5I"source;
FI"^6(function() {

  window.Recepten = {
    Models: {},
    Collections: {},
    Routers: {},
    Views: {}
  };

}).call(this);
(function() {
  this.JST || (this.JST = {});
  this.JST["backbone/templates/recipes/edit"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<h1>Edit recipe</h1>\n\n<form id="edit-recipe" name="recipe">\n  <div class="field">\n    <label for="name"> name:</label>\n    <input type="text" name="name" id="name" value="', name ,'" >\n  </div>\n\n  <div class="field">\n    <label for="instructions"> instructions:</label>\n    <input type="text" name="instructions" id="instructions" value="', instructions ,'" >\n  </div>\n\n  <div class="field">\n    <label for="post_id"> post_id:</label>\n    <input type="text" name="post_id" id="post_id" value="', post_id ,'" >\n  </div>\n\n  <div class="field">\n    <label for="preperation_time"> preperation_time:</label>\n    <input type="text" name="preperation_time" id="preperation_time" value="', preperation_time ,'" >\n  </div>\n\n  <div class="field">\n    <label for="course"> course:</label>\n    <input type="text" name="course" id="course" value="', course ,'" >\n  </div>\n\n  <div class="actions">\n    <input type="submit" value="Update Recipe" />\n  </div>\n\n</form>\n\n<a href="#/index">Back</a>\n');}return __p.join('');};
}).call(this);
(function() {
  this.JST || (this.JST = {});
  this.JST["backbone/templates/recipes/index"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<h1>Listing recipes</h1>\n\n<table id="recipes-table">\n  <tr>\n    <th>Name</th>\n    <th>Instructions</th>\n    <th>Post</th>\n    <th>Preperation time</th>\n    <th>Course</th>\n    <th></th>\n    <th></th>\n    <th></th>\n  </tr>\n</table>\n\n<br/>\n\n<a href="#/new">New Recipe</a>\n');}return __p.join('');};
}).call(this);
(function() {
  this.JST || (this.JST = {});
  this.JST["backbone/templates/recipes/new"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<h1>New recipe</h1>\n\n<form id="new-recipe" name="recipe">\n  <div class="field">\n    <label for="name"> name:</label>\n    <input type="text" name="name" id="name" value="', name ,'" >\n  </div>\n\n  <div class="field">\n    <label for="instructions"> instructions:</label>\n    <input type="text" name="instructions" id="instructions" value="', instructions ,'" >\n  </div>\n\n  <div class="field">\n    <label for="post_id"> post_id:</label>\n    <input type="text" name="post_id" id="post_id" value="', post_id ,'" >\n  </div>\n\n  <div class="field">\n    <label for="preperation_time"> preperation_time:</label>\n    <input type="text" name="preperation_time" id="preperation_time" value="', preperation_time ,'" >\n  </div>\n\n  <div class="field">\n    <label for="course"> course:</label>\n    <input type="text" name="course" id="course" value="', course ,'" >\n  </div>\n\n  <div class="actions">\n    <input type="submit" value="Create Recipe" />\n  </div>\n\n</form>\n\n<a href="#/index">Back</a>\n');}return __p.join('');};
}).call(this);
(function() {
  this.JST || (this.JST = {});
  this.JST["backbone/templates/recipes/recipe"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<td>', name ,'</td>\n<td>', instructions ,'</td>\n<td>', post_id ,'</td>\n<td>', preperation_time ,'</td>\n<td>', course ,'</td>\n\n<td><a href="#/', id ,'">Show</td>\n<td><a href="#/', id ,'/edit">Edit</td>\n<td><a href="#/', id ,'/destroy" class="destroy">Destroy</a></td>\n');}return __p.join('');};
}).call(this);
(function() {
  this.JST || (this.JST = {});
  this.JST["backbone/templates/recipes/show"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<p>\n  <b>Name:</b>\n  ', name ,'\n</p>\n\n<p>\n  <b>Instructions:</b>\n  ', instructions ,'\n</p>\n\n<p>\n  <b>Post:</b>\n  ', post_id ,'\n</p>\n\n<p>\n  <b>Preperation time:</b>\n  ', preperation_time ,'\n</p>\n\n<p>\n  <b>Course:</b>\n  ', course ,'\n</p>\n\n\n<a href="#/index">Back</a>\n');}return __p.join('');};
}).call(this);
(function() {
  var __hasProp = Object.prototype.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  Recepten.Models.Recipe = (function(_super) {

    __extends(Recipe, _super);

    function Recipe() {
      Recipe.__super__.constructor.apply(this, arguments);
    }

    Recipe.prototype.paramRoot = 'recipe';

    Recipe.prototype.defaults = {
      name: null,
      instructions: null,
      post_id: null,
      preperation_time: null,
      course: null
    };

    return Recipe;

  })(Backbone.Model);

  Recepten.Collections.RecipesCollection = (function(_super) {

    __extends(RecipesCollection, _super);

    function RecipesCollection() {
      RecipesCollection.__super__.constructor.apply(this, arguments);
    }

    RecipesCollection.prototype.model = Recepten.Models.Recipe;

    RecipesCollection.prototype.url = '/recipes';

    return RecipesCollection;

  })(Backbone.Collection);

}).call(this);
(function() {
  var _base,
    __hasProp = Object.prototype.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  (_base = Recepten.Views).Recipes || (_base.Recipes = {});

  Recepten.Views.Recipes.EditView = (function(_super) {

    __extends(EditView, _super);

    function EditView() {
      EditView.__super__.constructor.apply(this, arguments);
    }

    EditView.prototype.template = JST["backbone/templates/recipes/edit"];

    EditView.prototype.events = {
      "submit #edit-recipe": "update"
    };

    EditView.prototype.update = function(e) {
      var _this = this;
      e.preventDefault();
      e.stopPropagation();
      return this.model.save(null, {
        success: function(recipe) {
          _this.model = recipe;
          return window.location.hash = "/" + _this.model.id;
        }
      });
    };

    EditView.prototype.render = function() {
      $(this.el).html(this.template(this.model.toJSON()));
      this.$("form").backboneLink(this.model);
      return this;
    };

    return EditView;

  })(Backbone.View);

}).call(this);
(function() {
  var _base,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = Object.prototype.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  (_base = Recepten.Views).Recipes || (_base.Recipes = {});

  Recepten.Views.Recipes.IndexView = (function(_super) {

    __extends(IndexView, _super);

    function IndexView() {
      this.render = __bind(this.render, this);
      this.addOne = __bind(this.addOne, this);
      this.addAll = __bind(this.addAll, this);
      IndexView.__super__.constructor.apply(this, arguments);
    }

    IndexView.prototype.template = JST["backbone/templates/recipes/index"];

    IndexView.prototype.initialize = function() {
      return this.options.recipes.bind('reset', this.addAll);
    };

    IndexView.prototype.addAll = function() {
      return this.options.recipes.each(this.addOne);
    };

    IndexView.prototype.addOne = function(recipe) {
      var view;
      view = new Recepten.Views.Recipes.RecipeView({
        model: recipe
      });
      return this.$("tbody").append(view.render().el);
    };

    IndexView.prototype.render = function() {
      $(this.el).html(this.template({
        recipes: this.options.recipes.toJSON()
      }));
      this.addAll();
      return this;
    };

    return IndexView;

  })(Backbone.View);

}).call(this);
(function() {
  var _base,
    __hasProp = Object.prototype.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  (_base = Recepten.Views).Recipes || (_base.Recipes = {});

  Recepten.Views.Recipes.NewView = (function(_super) {

    __extends(NewView, _super);

    NewView.prototype.template = JST["backbone/templates/recipes/new"];

    NewView.prototype.events = {
      "submit #new-recipe": "save"
    };

    function NewView(options) {
      var _this = this;
      NewView.__super__.constructor.call(this, options);
      this.model = new this.collection.model();
      this.model.bind("change:errors", function() {
        return _this.render();
      });
    }

    NewView.prototype.save = function(e) {
      var _this = this;
      e.preventDefault();
      e.stopPropagation();
      this.model.unset("errors");
      return this.collection.create(this.model.toJSON(), {
        success: function(recipe) {
          _this.model = recipe;
          return window.location.hash = "/" + _this.model.id;
        },
        error: function(recipe, jqXHR) {
          return _this.model.set({
            errors: $.parseJSON(jqXHR.responseText)
          });
        }
      });
    };

    NewView.prototype.render = function() {
      $(this.el).html(this.template(this.model.toJSON()));
      this.$("form").backboneLink(this.model);
      return this;
    };

    return NewView;

  })(Backbone.View);

}).call(this);
(function() {
  var _base,
    __hasProp = Object.prototype.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  (_base = Recepten.Views).Recipes || (_base.Recipes = {});

  Recepten.Views.Recipes.RecipeView = (function(_super) {

    __extends(RecipeView, _super);

    function RecipeView() {
      RecipeView.__super__.constructor.apply(this, arguments);
    }

    RecipeView.prototype.template = JST["backbone/templates/recipes/recipe"];

    RecipeView.prototype.events = {
      "click .destroy": "destroy"
    };

    RecipeView.prototype.tagName = "tr";

    RecipeView.prototype.destroy = function() {
      this.model.destroy();
      this.remove();
      return false;
    };

    RecipeView.prototype.render = function() {
      $(this.el).html(this.template(this.model.toJSON()));
      return this;
    };

    return RecipeView;

  })(Backbone.View);

}).call(this);
(function() {
  var _base,
    __hasProp = Object.prototype.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  (_base = Recepten.Views).Recipes || (_base.Recipes = {});

  Recepten.Views.Recipes.ShowView = (function(_super) {

    __extends(ShowView, _super);

    function ShowView() {
      ShowView.__super__.constructor.apply(this, arguments);
    }

    ShowView.prototype.template = JST["backbone/templates/recipes/show"];

    ShowView.prototype.render = function() {
      $(this.el).html(this.template(this.model.toJSON()));
      return this;
    };

    return ShowView;

  })(Backbone.View);

}).call(this);
(function() {
  var __hasProp = Object.prototype.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  Recepten.Routers.RecipesRouter = (function(_super) {

    __extends(RecipesRouter, _super);

    function RecipesRouter() {
      RecipesRouter.__super__.constructor.apply(this, arguments);
    }

    RecipesRouter.prototype.initialize = function(options) {
      this.recipes = new Recepten.Collections.RecipesCollection();
      return this.recipes.reset(options.recipes);
    };

    RecipesRouter.prototype.routes = {
      "/new": "newRecipe",
      "/index": "index",
      "/:id/edit": "edit",
      "/:id": "show",
      ".*": "index"
    };

    RecipesRouter.prototype.newRecipe = function() {
      this.view = new Recepten.Views.Recipes.NewView({
        collection: this.recipes
      });
      return $("#recipes").html(this.view.render().el);
    };

    RecipesRouter.prototype.index = function() {
      this.view = new Recepten.Views.Recipes.IndexView({
        recipes: this.recipes
      });
      return $("#recipes").html(this.view.render().el);
    };

    RecipesRouter.prototype.show = function(id) {
      var recipe;
      recipe = this.recipes.get(id);
      this.view = new Recepten.Views.Recipes.ShowView({
        model: recipe
      });
      return $("#recipes").html(this.view.render().el);
    };

    RecipesRouter.prototype.edit = function(id) {
      var recipe;
      recipe = this.recipes.get(id);
      this.view = new Recepten.Views.Recipes.EditView({
        model: recipe
      });
      return $("#recipes").html(this.view.render().el);
    };

    return RecipesRouter;

  })(Backbone.Router);

}).call(this);
;
FI"_version;
F"%a66bc0d3e9bf69b5cb198518291a5594